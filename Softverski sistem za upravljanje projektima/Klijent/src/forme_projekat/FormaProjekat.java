/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme_projekat;

import logika.KlijentKontroler;
import domen.OpstiDomenskiObjekat;
import domen.Projekat;
import domen.Zadatak;
import domen.Zaposleni;
import forme.PocetnaForma;
import forme_zadatak.FormaKreiranjeZadatka;
import forme_zadatak.FormaZadatak;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.WindowConstants;
import komunikacija.util.Operacija;
import modeli_tabela.ZadaciTableModel;

/**
 *
 * @author relja
 */
public class FormaProjekat extends javax.swing.JFrame {

    /**
     * Creates new form FormaProjekat
     */
    Projekat projekat;
    List<Zadatak> zadaci;
    ZadaciTableModel ztm;
    PocetnaForma parentForma;
    Zaposleni zaposleni;

    public FormaProjekat(Projekat projekat, PocetnaForma parentForma) {
        this.projekat = projekat;
        this.parentForma = parentForma;
        try {
            this.zaposleni = KlijentKontroler.getInstance().getZaposleni();
        } catch (IOException ex) {
            Logger.getLogger(FormaProjekat.class.getName()).log(Level.SEVERE, null, ex);
        }
        initComponents();
        popuniKomponente();
        setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle("Projekat: " + this.projekat.getNaziv());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDatum = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaOpis = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZadaci = new javax.swing.JTable();
        btnDodajZadatak = new javax.swing.JButton();
        btnUcitajZadatak = new javax.swing.JButton();
        btnObrisiZadatak = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("ID:");

        txtID.setEditable(false);
        txtID.setText("23");

        jLabel2.setText("Naziv:");

        txtNaziv.setEditable(false);
        txtNaziv.setText("Nova tehnika");

        jLabel3.setText("Datum pocetka:");

        txtDatum.setEditable(false);
        txtDatum.setText("27-11-2023");

        jLabel4.setText("Opis:");

        areaOpis.setEditable(false);
        areaOpis.setColumns(20);
        areaOpis.setRows(5);
        areaOpis.setText("Uvodjenje nove linije proizvoda na trziste");
        jScrollPane1.setViewportView(areaOpis);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Zadaci"));

        tblZadaci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Naziv", "Opis"
            }
        ));
        jScrollPane2.setViewportView(tblZadaci);

        btnDodajZadatak.setText("Dodaj zadatak");
        btnDodajZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZadatakActionPerformed(evt);
            }
        });

        btnUcitajZadatak.setText("Ucitaj zadatak");
        btnUcitajZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUcitajZadatakActionPerformed(evt);
            }
        });

        btnObrisiZadatak.setText("Obrisi zadatak");
        btnObrisiZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiZadatakActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 549, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDodajZadatak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUcitajZadatak)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisiZadatak)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajZadatak)
                    .addComponent(btnUcitajZadatak)
                    .addComponent(btnObrisiZadatak))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNaziv)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZadatakActionPerformed
        new FormaKreiranjeZadatka(projekat, this);
    }//GEN-LAST:event_btnDodajZadatakActionPerformed

    private void btnUcitajZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUcitajZadatakActionPerformed
        int obelezenRed = tblZadaci.getSelectedRow();

        if (obelezenRed != -1) {
            try {
                Zadatak ucitanZadatak = zadaci.get(obelezenRed);
                ucitanZadatak = KlijentKontroler.getInstance().ucitajZadatak(ucitanZadatak);
                ucitanZadatak.setProjekat(this.projekat);
                new FormaZadatak(ucitanZadatak, this);
            } catch (Exception ex) {
                Logger.getLogger(PocetnaForma.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nije izabran nijedan red!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUcitajZadatakActionPerformed

    private void btnObrisiZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiZadatakActionPerformed

        int obelezenIndeks = tblZadaci.getSelectedRow();

        if (obelezenIndeks != -1) {
            Zadatak zadatak = zadaci.get(obelezenIndeks);
            try {

                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(this, "Da li stvarno želite obrisati zadatak: " + zadatak + "?", "Upozorenje", dialogButton, JOptionPane.WARNING_MESSAGE);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    KlijentKontroler.getInstance().obrisiZadatak(zadatak);
                    popuniKomponente();
                    JOptionPane.showMessageDialog(this, "Uspesno obrisan zadatak: " + zadatak + "!", "Informacija", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Greska prilikom brisanja zadatka: " + zadatak + "!", "Greska", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FormaZadatak.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nije izabran nijedan red!", "Greska", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnObrisiZadatakActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaOpis;
    private javax.swing.JButton btnDodajZadatak;
    private javax.swing.JButton btnObrisiZadatak;
    private javax.swing.JButton btnUcitajZadatak;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblZadaci;
    private javax.swing.JTextField txtDatum;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    public void popuniKomponente() {
        txtNaziv.setText(projekat.getNaziv());
        txtDatum.setText(projekat.getDatumPocetka().toString());
        txtID.setText(String.valueOf(projekat.getIdProjekat()));
        areaOpis.setText(projekat.getOpis());

        try {
            zadaci = KlijentKontroler.getInstance().vratiListuSvihZadataka(new Zadatak(-1, this.projekat));
            ztm = new ZadaciTableModel(zadaci);

            if (zadaci != null) {
                tblZadaci.setModel(ztm);
                tblZadaci.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            }

        } catch (Exception ex) {
            Logger.getLogger(FormaProjekat.class.getName()).log(Level.SEVERE, null, ex);
        }
        areaOpis.setLineWrap(true);
        areaOpis.setWrapStyleWord(true);
        
        podesiStanjaUOdnosuNaDozvole();
    }
    
        private void podesiStanjaUOdnosuNaDozvole() {
            if (!this.zaposleni.imaDozvolu(Operacija.ZAPAMTI_ZADATAK)) {
                btnDodajZadatak.setEnabled(false);
            }
            if (!this.zaposleni.imaDozvolu(Operacija.OBRISI_ZADATAK)){
                btnObrisiZadatak.setEnabled(false);
            }
    }
}
