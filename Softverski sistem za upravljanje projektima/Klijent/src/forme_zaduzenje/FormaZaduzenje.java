/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme_zaduzenje;

import domen.OpstiDomenskiObjekat;
import logika.KlijentKontroler;
import domen.Zadatak;
import domen.Zaduzenje;
import domen.Zaposleni;
import forme_zadatak.FormaZadatak;
import java.io.IOException;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.util.OperacijaNadZaduzenjem;
import java.sql.SQLIntegrityConstraintViolationException;

/**
 *
 * @author relja
 */
public class FormaZaduzenje extends javax.swing.JFrame {

    /**
     * Creates new form FormaZaduzenje
     */
    Zadatak zadatak;
    Zaduzenje zaduzenje;
    List<Zaposleni> listaZaposlenih;
    FormaZadatak parentForma;
    OperacijaNadZaduzenjem op;

    public FormaZaduzenje(FormaZadatak parentForma) {
        this.parentForma = parentForma;
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);

    }

    public FormaZaduzenje(Zaduzenje zaduzenje, FormaZadatak parentForma) {
        this(parentForma);
        this.zadatak = zaduzenje.getZadatak();
        this.zaduzenje = zaduzenje;
        this.op = OperacijaNadZaduzenjem.IZMENA;
        popuniKomponente();
    }

    public FormaZaduzenje(Zadatak zadatak, FormaZadatak parentForma) {
        this(parentForma);
        this.zadatak = zadatak;
        this.op = OperacijaNadZaduzenjem.DODAVANJE;
        popuniKomponente();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNazivZadatka = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        comboZaposleni = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtNazivZaduzenja = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaOpisPosla = new javax.swing.JTextArea();
        btnZapamtiZaduzenje = new javax.swing.JButton();
        JXDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Dodavanje zaduzenja");

        jLabel1.setText("Naziv zadatka: ");

        txtNazivZadatka.setEditable(false);

        jLabel2.setText("Zaposleni: ");

        jLabel3.setText("Naziv zaduzenja: ");

        jLabel4.setText("Opis posla: ");

        areaOpisPosla.setColumns(20);
        areaOpisPosla.setRows(5);
        areaOpisPosla.setText("Zaposleni sprovodi ankete i istrazivanja o zeljama\ni potrebama kupaca");
        jScrollPane1.setViewportView(areaOpisPosla);

        btnZapamtiZaduzenje.setText("Zapamti zaduzenje");
        btnZapamtiZaduzenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZapamtiZaduzenjeActionPerformed(evt);
            }
        });

        jLabel5.setText("Datum pocetka:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnZapamtiZaduzenje))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                            .addComponent(comboZaposleni, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNazivZadatka)
                            .addComponent(JXDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNazivZaduzenja, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNazivZadatka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNazivZaduzenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JXDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboZaposleni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnZapamtiZaduzenje))
                    .addComponent(jLabel4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnZapamtiZaduzenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZapamtiZaduzenjeActionPerformed
        Zaposleni izabranZaposleni = (Zaposleni) comboZaposleni.getSelectedItem();
        String nazivZaduzenja = txtNazivZaduzenja.getText();
        String opis = areaOpisPosla.getText();
        Date datum = JXDatePicker.getDate();

        if (txtNazivZaduzenja.getText().trim().equals("")) {
            JOptionPane.showMessageDialog(null, "Morate uneti naziv zaduzenja!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (datum == null) {
            JOptionPane.showMessageDialog(null, "Morate uneti datum pocetka projekta iz padajuce liste!", "Upozorenje", JOptionPane.WARNING_MESSAGE);
            return;
        }

        LocalDate datumLD = datum.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        Zaduzenje zaduzenjeUnos = new Zaduzenje(nazivZaduzenja, opis, datumLD, izabranZaposleni, zadatak);

        try {
            if (op == OperacijaNadZaduzenjem.DODAVANJE) {
                KlijentKontroler.getInstance().zapamtiZaduzenje(zaduzenjeUnos);
                parentForma.popuniKomponente();
                this.dispose();
                JOptionPane.showMessageDialog(null, "Sistem je zapamtio podatke o zaduzenju!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            } else if (op == OperacijaNadZaduzenjem.IZMENA) {
                zaduzenjeUnos.setStariJMBG(this.zaduzenje.getZaposleni().getJMBG());
                KlijentKontroler.getInstance().izmeniZaduzenje(zaduzenjeUnos);
                parentForma.popuniKomponente();
                this.dispose();
                JOptionPane.showMessageDialog(null, "Sistem je izmenio podatke o zaduzenju!", "Obavestenje", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLIntegrityConstraintViolationException ex) {
            JOptionPane.showMessageDialog(null, "Izabran zaposleni je vec angazovan na ovom zadatku!", "Greska", JOptionPane.ERROR_MESSAGE);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Sistem ne moze zapamtiti podatke o zaduzenju!", "Greska", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FormaZaduzenje.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnZapamtiZaduzenjeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker JXDatePicker;
    private javax.swing.JTextArea areaOpisPosla;
    private javax.swing.JButton btnZapamtiZaduzenje;
    private javax.swing.JComboBox<Zaposleni> comboZaposleni;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtNazivZadatka;
    private javax.swing.JTextField txtNazivZaduzenja;
    // End of variables declaration//GEN-END:variables

    private void popuniKomponente() {
        areaOpisPosla.setLineWrap(true);
        areaOpisPosla.setWrapStyleWord(true);

        JXDatePicker.getEditor().setText("Unesi datum iz padajuce liste desno!");
        JXDatePicker.getEditor().setEnabled(false);

        txtNazivZadatka.setText(zadatak.getNaziv());
        if (op == OperacijaNadZaduzenjem.IZMENA) {
            txtNazivZaduzenja.setText(zaduzenje.getNaziv());
            Date datum = Date.from(zaduzenje.getDatumPocetka().atStartOfDay(ZoneId.systemDefault()).toInstant());
            JXDatePicker.setDate(datum);
            popuniComboBox(zaduzenje.getZaposleni());
            areaOpisPosla.setText(zaduzenje.getOpis());
            btnZapamtiZaduzenje.setText("Izmeni zaduzenje");
            setTitle("Izmena zaduzenja");
        } else {
            popuniComboBox();
            btnZapamtiZaduzenje.setText("Zapamti zaduzenje");
        }
    }

    private void popuniComboBox() {
        try {
            Zaposleni pomZaposleni = new Zaposleni();
            pomZaposleni.setKompanija(this.zadatak.getProjekat().getKompanija());

            listaZaposlenih = KlijentKontroler.getInstance().vratiListuSvihZaposlenih(pomZaposleni);
            for (OpstiDomenskiObjekat z : listaZaposlenih) {
                comboZaposleni.addItem((Zaposleni) z);
            }
        } catch (Exception ex) {
            Logger.getLogger(FormaZaduzenje.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void popuniComboBox(Zaposleni zap) {
//        postavljamo konkretnog zaposlenog selektovanog u combo
        int brojac = 0;
        int indeksZaSelektovati = 0;
        try {
            Zaposleni pomZaposleni = new Zaposleni();
            pomZaposleni.setKompanija(zap.getKompanija());

            listaZaposlenih = KlijentKontroler.getInstance().vratiListuSvihZaposlenih(pomZaposleni);
            for (OpstiDomenskiObjekat z : listaZaposlenih) {
                comboZaposleni.addItem((Zaposleni) z);
                if (((Zaposleni) z).getJMBG().equals(zap.getJMBG())) {
                    indeksZaSelektovati = brojac;
                }
                brojac++;
            }

            comboZaposleni.setSelectedIndex(indeksZaSelektovati);
        } catch (Exception ex) {
            Logger.getLogger(FormaZaduzenje.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
