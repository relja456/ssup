/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme_zadatak;

import domen.OpstiDomenskiObjekat;
import logika.KlijentKontroler;
import domen.Zadatak;
import domen.Zaduzenje;
import forme.PocetnaForma;
import forme_projekat.FormaProjekat;
import forme_zaduzenje.FormaZaduzenje;
import java.io.IOException;
import java.time.LocalDate;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import modeli_tabela.ProjektiTableModel;
import modeli_tabela.ZaduzenjaTableModel;

/**
 *
 * @author relja
 */
public class FormaZadatak extends javax.swing.JFrame {

    /**
     * Creates new form FormaZadatak
     */
    Zadatak zadatak;
    List<Zaduzenje> zaduzenja;
    boolean dopustenaIzmena = false;
    ZaduzenjaTableModel ztm;
    FormaProjekat parentForma;

    public FormaZadatak(Zadatak zadatak, FormaProjekat parentForma) {
        this.zadatak = zadatak;
        this.parentForma = parentForma;
        initComponents();
        setVisible(true);
        setLocationRelativeTo(null);
        popuniKomponente();
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setTitle("Zadatak: " + zadatak.getNaziv());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        areaOpis = new javax.swing.JTextArea();
        btnIzmeniZadatak = new javax.swing.JButton();
        btnZapamtiZadatak = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblZaduzenja = new javax.swing.JTable();
        btnDodajZaduzenje = new javax.swing.JButton();
        btnUcitajZaduzenje = new javax.swing.JButton();
        btnObrisiZaduzenje = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Naziv: ");

        txtNaziv.setEditable(false);

        jLabel2.setText("ID:");

        txtID.setEditable(false);

        jLabel3.setText("Opis: ");

        areaOpis.setEditable(false);
        areaOpis.setColumns(20);
        areaOpis.setRows(5);
        jScrollPane1.setViewportView(areaOpis);

        btnIzmeniZadatak.setText("Omogući izmenu");
        btnIzmeniZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniZadatakActionPerformed(evt);
            }
        });

        btnZapamtiZadatak.setText("Zapamti zadatak");
        btnZapamtiZadatak.setEnabled(false);
        btnZapamtiZadatak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnZapamtiZadatakActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Zaduženja"));

        tblZaduzenja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Ime i prezime", "Naziv zaduzenja", "Opis", "Datum pocetka"
            }
        ));
        jScrollPane2.setViewportView(tblZaduzenja);

        btnDodajZaduzenje.setText("Dodaj zaduzenje");
        btnDodajZaduzenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajZaduzenjeActionPerformed(evt);
            }
        });

        btnUcitajZaduzenje.setText("Ucitaj zaduzenje");
        btnUcitajZaduzenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUcitajZaduzenjeActionPerformed(evt);
            }
        });

        btnObrisiZaduzenje.setText("Izbrisi zaduzenje");
        btnObrisiZaduzenje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiZaduzenjeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnDodajZaduzenje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUcitajZaduzenje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnObrisiZaduzenje)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodajZaduzenje)
                    .addComponent(btnUcitajZaduzenje)
                    .addComponent(btnObrisiZaduzenje))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnIzmeniZadatak)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnZapamtiZadatak))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnIzmeniZadatak)
                    .addComponent(btnZapamtiZadatak))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUcitajZaduzenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUcitajZaduzenjeActionPerformed
        if (tblZaduzenja.getSelectedRow() != -1) {
            Zaduzenje izabranoZaduzenje = zaduzenja.get(tblZaduzenja.getSelectedRow());
            izabranoZaduzenje.setZadatak(this.zadatak);

            try {
                izabranoZaduzenje = (Zaduzenje) KlijentKontroler.getInstance().ucitajZaduzenje(izabranoZaduzenje);
                izabranoZaduzenje.setZadatak(this.zadatak);
            } catch (IOException ex) {
                Logger.getLogger(FormaZadatak.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(FormaZadatak.class.getName()).log(Level.SEVERE, null, ex);
            }

            new FormaZaduzenje(izabranoZaduzenje, this);
        } else {
            JOptionPane.showMessageDialog(this, "Nije izabran nijedan red!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUcitajZaduzenjeActionPerformed

    private void btnIzmeniZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniZadatakActionPerformed
        dopustenaIzmena = !dopustenaIzmena;
        postaviStanjaDugmica();
    }//GEN-LAST:event_btnIzmeniZadatakActionPerformed

    private void btnZapamtiZadatakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnZapamtiZadatakActionPerformed
        Zadatak pomZadatak = this.zadatak;

        pomZadatak.setNaziv(txtNaziv.getText());
        pomZadatak.setOpis(areaOpis.getText());

        try {
            KlijentKontroler.getInstance().izmeniZadatak(pomZadatak);
            zadatak = (Zadatak) KlijentKontroler.getInstance().ucitajZadatak(pomZadatak);

            dopustenaIzmena = false;
            parentForma.popuniKomponente();
            popuniKomponente();
            postaviStanjaDugmica();
        } catch (Exception ex) {
            Logger.getLogger(FormaZadatak.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnZapamtiZadatakActionPerformed

    private void btnDodajZaduzenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajZaduzenjeActionPerformed
        new FormaZaduzenje(zadatak, this);
    }//GEN-LAST:event_btnDodajZaduzenjeActionPerformed

    private void btnObrisiZaduzenjeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiZaduzenjeActionPerformed
        if (tblZaduzenja.getSelectedRow() != -1) {
            Zaduzenje izabranoZaduzenje = zaduzenja.get(tblZaduzenja.getSelectedRow());
            izabranoZaduzenje.setZadatak(this.zadatak);

            int dialogButton = JOptionPane.YES_NO_OPTION;
            try {
                int dialogResult = JOptionPane.showConfirmDialog(this, "Da li stvarno želite obrisati zaduzenje: " + izabranoZaduzenje + "?", "Upozorenje", dialogButton, JOptionPane.WARNING_MESSAGE);
                if (dialogResult == JOptionPane.YES_OPTION) {
                    KlijentKontroler.getInstance().obrisiZaduzenje(izabranoZaduzenje);
                    popuniTabelu();
                    JOptionPane.showMessageDialog(this, "Uspesno obrisano zaduzenje: " + izabranoZaduzenje + "!", "Informacija", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Greska prilikom brisanja zaduzenja: " + izabranoZaduzenje + "!", "Greska", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PocetnaForma.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Greska prilikom brisanja zaduzenja: " + izabranoZaduzenje + "!", "Greska", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(PocetnaForma.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(this, "Nije izabran nijedan red!", "Greska", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiZaduzenjeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaOpis;
    private javax.swing.JButton btnDodajZaduzenje;
    private javax.swing.JButton btnIzmeniZadatak;
    private javax.swing.JButton btnObrisiZaduzenje;
    private javax.swing.JButton btnUcitajZaduzenje;
    private javax.swing.JButton btnZapamtiZadatak;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblZaduzenja;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNaziv;
    // End of variables declaration//GEN-END:variables

    public void popuniKomponente() {
        txtNaziv.setText(zadatak.getNaziv());
        txtID.setText(String.valueOf(zadatak.getIdZadatak()));
        areaOpis.setText(zadatak.getOpis());
        areaOpis.setLineWrap(true);
        areaOpis.setWrapStyleWord(true);
        popuniTabelu();
    }

    private void postaviStanjaDugmica() {
        if (dopustenaIzmena) {
            btnIzmeniZadatak.setText("Poništi izmenu");
            txtNaziv.setEditable(true);
            areaOpis.setEditable(true);
            btnZapamtiZadatak.setEnabled(true);
        } else {
            btnIzmeniZadatak.setText("Omogući izmenu");
            txtNaziv.setEditable(false);
            areaOpis.setEditable(false);
            btnZapamtiZadatak.setEnabled(false);
            txtNaziv.setText(zadatak.getNaziv());
            areaOpis.setText(zadatak.getOpis());
        }
    }

    private void popuniTabelu() {
        try {
            Zaduzenje pomZaduzenje = new Zaduzenje();
            pomZaduzenje.setZadatak(this.zadatak);

            zaduzenja = KlijentKontroler.getInstance().vratiListuSvihZaduzenja(pomZaduzenje);
            ztm = new ZaduzenjaTableModel(zaduzenja);

            if (zaduzenja != null) {
                tblZaduzenja.setModel(ztm);
                tblZaduzenja.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            }
        } catch (Exception ex) {
            Logger.getLogger(PocetnaForma.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
